{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Omistaja\\\\Documents\\\\GitHub\\\\Ohjelmistoprojekti\\\\Arduino\\\\App\\\\StatsView.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function DeviceList() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  useEffect(function () {\n    fetch('http://192.168.2.190:1880/data/all/unique/count').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData([0][\"COUNT (DISTINCT data)\"]);\n    }).catch(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 60\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }\n  }) : React.createElement(FlatList, {\n    data: data,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(\"text\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, item);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#130c18\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  text: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Omistaja/Documents/GitHub/Ohjelmistoprojekti/Arduino/App/StatsView.js"],"names":["StatusBar","React","useEffect","useState","DeviceList","isLoading","setLoading","data","setData","fetch","then","response","json","catch","error","console","finally","flex","padding","item","styles","StyleSheet","create","container","backgroundColor","alignItems","justifyContent","text","color","fontWeight"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;AAGA,eAAe,SAASC,UAAT,GAAsB;AAAA,kBAEHD,QAAQ,CAAC,IAAD,CAFL;AAAA;AAAA,MAE5BE,SAF4B;AAAA,MAEjBC,UAFiB;;AAAA,mBAGXH,QAAQ,CAAC,EAAD,CAHG;AAAA;AAAA,MAG5BI,IAH4B;AAAA,MAGtBC,OAHsB;;AAKnCN,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,KAAK,CAAC,iDAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACE,IAAD;AAAA,aAAUJ,OAAO,CAAC,CAAC,CAAD,EAAI,uBAAJ,CAAD,CAAjB;AAAA,KAFR,EAGGK,KAHH,CAGS,UAACC,KAAD;AAAA,aAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAX;AAAA,KAHT,EAIGE,OAJH,CAIW;AAAA,aAAMV,UAAU,CAAC,KAAD,CAAhB;AAAA,KAJX;AAKD,GANQ,EAMN,EANM,CAAT;AAUA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEW,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE;AAApB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,SAAS,GAAG,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACR,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEE,IADR;AAEE,IAAA,UAAU,EAAE;AAAA,UAAGY,IAAH,QAAGA,IAAH;AAAA,aACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAP,CADY;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAYD;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTN,IAAAA,IAAI,EAAE,CADG;AAETO,IAAAA,eAAe,EAAE,SAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,OADH;AAEJC,IAAAA,UAAU,EAAE;AAFR;AAPyB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ActivityIndicator, FlatList, StyleSheet, Text, View } from \"react-native\";\r\n\r\nexport default function DeviceList() {\r\n  \r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://192.168.2.190:1880/data/all/unique/count')\r\n      .then((response) => response.json())\r\n      .then((json) => setData([0][\"COUNT (DISTINCT data)\"]))\r\n      .catch((error) => console.error(error))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  //const data = JSON.parse(data)\r\n  \r\n  return (\r\n    <View style={{ flex: 1, padding: 60 }}>\r\n      {isLoading ? <ActivityIndicator/> : (\r\n        <FlatList\r\n          data={data}\r\n          renderItem={({ item }) => (\r\n          <text>{item}</text>\r\n        )}\r\n      />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#130c18\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  text: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}