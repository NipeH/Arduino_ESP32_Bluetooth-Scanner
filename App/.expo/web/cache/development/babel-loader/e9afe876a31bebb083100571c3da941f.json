{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Omistaja\\\\Documents\\\\GitHub\\\\Ohjelmistoprojekti\\\\Arduino\\\\App\\\\SettingsView.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as SQLite from 'expo-sqlite';\nvar db = SQLite.openDatabase('shoppinglist.db');\nexport default function SettingsView() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      amount = _useState4[0],\n      setAmount = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      shList = _useState6[0],\n      addToList = _useState6[1];\n\n  useEffect(function () {\n    db.transaction(function (tx) {\n      tx.executeSql('create table if not exists shList (id integer primary key not null, text text, amount int);');\n    }, function (error) {\n      console.log(\"error\" + error);\n    }, updateList);\n  }, []);\n\n  var saveItem = function saveItem() {\n    db.transaction(function (tx) {\n      tx.executeSql('insert into shList (text, amount) values (?, ?);', [text, parseInt(amount)]);\n    }, function (error) {\n      console.log(\"error\" + error);\n    }, updateList);\n    setText(\"\");\n    setAmount(\"\");\n  };\n\n  var updateList = function updateList() {\n    db.transaction(function (tx) {\n      tx.executeSql('select * from shList;', [], function (_, _ref) {\n        var rows = _ref.rows;\n        return addToList(rows._array);\n      });\n    });\n    console.log(shList);\n  };\n\n  var deleteItem = function deleteItem(id) {\n    db.transaction(function (tx) {\n      tx.executeSql('delete from shList where id = ?;', [id]);\n    }, null, updateList);\n  };\n\n  var listSeparator = function listSeparator() {\n    return React.createElement(View, {\n      style: {\n        height: 5,\n        width: \"80%\",\n        backgroundColor: \"#fff\",\n        marginLeft: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    });\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputCont,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 22\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Saved Devices\"), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Name\",\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    value: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Address\",\n    onChangeText: function onChangeText(amount) {\n      return setAmount(amount);\n    },\n    value: amount,\n    keyboardType: \"numeric\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    style: styles.button,\n    title: \"Save\",\n    onPress: saveItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.outputCont,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: styles.listcontainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 22\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, item.text, \" - \", item.amount), React.createElement(Text, {\n        style: styles.delete,\n        onPress: function onPress() {\n          return deleteItem(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, \" Delete\"));\n    },\n    data: shList,\n    ItemSeparatorComponent: listSeparator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  })), React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 20,\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {},\n  inputCont: {\n    paddingTop: 20,\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    paddingBottom: 20\n  },\n  textInput: {\n    marginBottom: 3,\n    marginTop: 5,\n    fontSize: 20,\n    width: 200,\n    borderWidth: 1,\n    borderColor: 'gray',\n    paddingBottom: 3\n  },\n  outputCont: {\n    paddingTop: 10,\n    flex: 4,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  listcontainer: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  delete: {\n    color: 'red',\n    fontSize: 20,\n    paddingLeft: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/Omistaja/Documents/GitHub/Ohjelmistoprojekti/Arduino/App/SettingsView.js"],"names":["StatusBar","React","useEffect","useState","SQLite","db","openDatabase","SettingsView","text","setText","amount","setAmount","shList","addToList","transaction","tx","executeSql","error","console","log","updateList","saveItem","parseInt","_","rows","_array","deleteItem","id","listSeparator","height","width","backgroundColor","marginLeft","styles","container","inputCont","fontSize","textInput","button","outputCont","item","toString","listcontainer","delete","StyleSheet","create","marginTop","flex","alignItems","justifyContent","paddingTop","paddingBottom","marginBottom","borderWidth","borderColor","flexDirection","color","paddingLeft"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, KeyboardAvoidingView, TextInput, FlatList, Button } from 'react-native';\r\nimport * as SQLite from 'expo-sqlite';\r\n\r\nconst db = SQLite.openDatabase('shoppinglist.db');\r\n\r\n\r\nexport default function SettingsView() {\r\n\r\nconst[text, setText] = useState(\"\");\r\nconst[amount, setAmount] = useState(\"\");\r\nconst[shList, addToList] = useState([]);\r\n\r\nuseEffect(() => {\r\n  db.transaction(tx => {\r\n    tx.executeSql('create table if not exists shList (id integer primary key not null, text text, amount int);');\r\n  },(error => {console.log(\"error\" +error)}), updateList)\r\n}, []);\r\n\r\nconst saveItem = () => {\r\n  db.transaction(tx => {\r\n    tx.executeSql('insert into shList (text, amount) values (?, ?);',\r\n      [text, parseInt(amount)]);\r\n  }, (error => {console.log(\"error\" +error)}), updateList);\r\nsetText(\"\");\r\nsetAmount(\"\");\r\n}\r\n\r\nconst updateList= () => {\r\n  db.transaction(tx => {\r\n    tx.executeSql('select * from shList;', [], (_, { rows }) => addToList(rows._array)\r\n    );\r\n  });\r\n  console.log(shList);\r\n}\r\n\r\nconst deleteItem = (id) => {\r\n  db.transaction(\r\n    tx => { tx.executeSql('delete from shList where id = ?;', [id]);\r\n  },null, updateList\r\n  )\r\n}\r\nconst listSeparator = () => {\r\n  return (\r\n    <View\r\n      style={{\r\n        height: 5,\r\n        width: \"80%\",\r\n        backgroundColor: \"#fff\",\r\n        marginLeft: \"10%\"\r\n      }}\r\n    />\r\n  );\r\n}\r\n  return (\r\n    <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\r\n      \r\n\r\n      <View style={styles.inputCont}>\r\n      <Text style={{fontSize:22}}>Saved Devices</Text>\r\n        <TextInput style={styles.textInput} placeholder=\"Name\" onChangeText={text => setText(text)} value={text}></TextInput>\r\n        <TextInput style={styles.textInput} placeholder=\"Address\" \r\n        onChangeText={amount => setAmount(amount)} value={amount} keyboardType=\"numeric\"></TextInput>\r\n        <Button style={styles.button} title=\"Save\" onPress={saveItem}></Button>\r\n      </View>\r\n\r\n      <View style={styles.outputCont}>\r\n      <FlatList\r\n      keyExtractor={item => item.id.toString()} \r\n      renderItem={({item}) =>\r\n        <View style={styles.listcontainer}>\r\n          <Text style={{fontSize:22}}>{item.text} - {item.amount}</Text>\r\n          <Text style={styles.delete} onPress={() => deleteItem(item.id)}> Delete</Text>\r\n      </View>}\r\n      data={shList}\r\n      ItemSeparatorComponent={listSeparator}/>\r\n\r\n      </View>\r\n    \r\n      <StatusBar style=\"auto\" />\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop:20,\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    \r\n  },\r\n  inputCont: {\r\n \r\n    paddingTop:20,\r\n    flex:1,\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    width:'100%',\r\n    paddingBottom:20,\r\n  },\r\n  textInput: {\r\n    marginBottom:3,\r\n    marginTop:5,\r\n    fontSize:20,\r\n    width:200,\r\n    borderWidth:1,\r\n    borderColor:'gray',\r\n    paddingBottom:3,\r\n  },\r\n  outputCont: {\r\n    paddingTop:10,\r\n    flex:4,\r\n    flexDirection:'row',\r\n    justifyContent:'center',\r\n    alignItems:'flex-start',\r\n  },\r\n  listcontainer: {\r\n    flexDirection:'row',\r\n    justifyContent:'center'\r\n  },\r\n  delete: {\r\n    color:'red',\r\n    fontSize:20,\r\n    paddingLeft:15,\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}