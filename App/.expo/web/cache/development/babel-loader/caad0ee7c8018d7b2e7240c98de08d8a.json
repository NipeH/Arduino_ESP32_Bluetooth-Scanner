{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Omistaja\\\\Documents\\\\GitHub\\\\Ohjelmistoprojekti\\\\Arduino\\\\App\\\\HistoryView.js\";\nimport React, { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      desc = _useState2[0],\n      setDesc = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      recipes = _useState4[0],\n      setRecipe = _useState4[1];\n\n  var getRecipe = function getRecipe() {\n    var url = \"http://localhost:1880/data/today\" + desc;\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setRecipe(responseJson.results);\n    }).catch(function (error) {\n      Alert.alert(\"Error\", error);\n    });\n  };\n\n  var listSeparator = function listSeparator() {\n    return React.createElement(View, {\n      style: {\n        height: 1,\n        width: \"80%\",\n        backgroundColor: \"#CED0CE\",\n        marginLeft: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      marginLeft: \"5%\",\n      marginTop: \"20%\"\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, item.title), React.createElement(Image, {\n        style: {\n          width: 100,\n          height: 100\n        },\n        source: {\n          uri: item.thumbnail\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }));\n    },\n    ItemSeparatorComponent: listSeparator,\n    data: recipes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      fontSize: 18,\n      width: 200\n    },\n    value: desc,\n    placeholder: \"Description\",\n    onChangeText: function onChangeText(desc) {\n      return setDesc(desc);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Find\",\n    onPress: getRecipe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Omistaja/Documents/GitHub/Ohjelmistoprojekti/Arduino/App/HistoryView.js"],"names":["React","useState","App","desc","setDesc","recipes","setRecipe","getRecipe","url","fetch","then","response","json","responseJson","results","catch","error","Alert","alert","listSeparator","height","width","backgroundColor","marginLeft","styles","container","marginTop","item","id","title","uri","thumbnail","fontSize","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Button,\r\n  TextInput,\r\n  FlatList,\r\n  Image,\r\n} from \"react-native\";\r\n\r\nexport default function App() {\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [recipes, setRecipe] = useState([]);\r\n\r\n  const getRecipe = () => {\r\n    const url = \"http://localhost:1880/data/today\" + desc; // tähän haku laitteiden tietokannasta\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        setRecipe(responseJson.results);\r\n      })\r\n      .catch((error) => {\r\n        Alert.alert(\"Error\", error);\r\n      });\r\n  };\r\n\r\n  const listSeparator = () => {\r\n    return (\r\n      <View\r\n        style={{\r\n          height: 1,\r\n          width: \"80%\",\r\n          backgroundColor: \"#CED0CE\",\r\n          marginLeft: \"10%\",\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        style={{ marginLeft: \"5%\", marginTop: \"20%\" }}\r\n        keyExtractor={(item) => item.id}\r\n        renderItem={({ item }) => (\r\n          <View>\r\n            <Text>{item.title}</Text>\r\n            <Image\r\n              style={{ width: 100, height: 100 }}\r\n              source={{ uri: item.thumbnail }}\r\n            />\r\n          </View>\r\n        )}\r\n        ItemSeparatorComponent={listSeparator}\r\n        data={recipes}\r\n      />\r\n      <TextInput\r\n        style={{ fontSize: 18, width: 200 }}\r\n        value={desc}\r\n        placeholder=\"Description\"\r\n        onChangeText={(desc) => setDesc(desc)}\r\n      />\r\n\r\n      <Button title=\"Find\" onPress={getRecipe} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}